# ZIP-Revelio Architecture (Pyramid View)

                        ┌──────────────────┐
                        │   ZIP-Revelio    │
                        │ High-Performance │
                        │   ZIP Analyzer   │
                        └────────┬─────────┘
                                │
            ┌─────────────────┬─┴───────────────┐
            │                 │                 │
     ┌──────┴──────┐  ┌──────┴──────┐  ┌──────┴──────┐
     │    Input    │  │  Processing │  │   Output    │
     │   Handler   │  │    Engine   │  │  Generator  │
     └──────┬──────┘  └──────┬──────┘  └──────┬──────┘
            │               │                 │
     ┌──────┴──────┐  ┌──────┴──────┐  ┌──────┴──────┐
     │  CLI Args   │  │   Parallel  │  │   Report    │
     │  Progress   │  │  Processing │  │  Formatter  │
     └──────┬──────┘  └──────┬──────┘  └──────┬──────┘
            │               │                 │
    ┌───────┴───────┐ ┌────┴────┐    ┌──────┴──────┐
    │ Config Parser │ │ Workers │    │    Stats    │
    │ Input Reader  │ │ Pools   │    │  Collector  │
    └───────┬───────┘ └────┬────┘    └──────┬──────┘
            │              │                 │
    ┌───────┴───────┐ ┌────┴────┐    ┌──────┴──────┐
    │ Buffer Pool   │ │  Tasks  │    │   Output    │
    │ Memory Mgmt   │ │ Queues  │    │   Writer    │
    └───────────────┘ └─────────┘    └─────────────┘

## Level 1: Core Components
┌─────────────────────────────────────────────────┐
│ 1. Input Handler                                │
│    - CLI interface and argument parsing         │
│    - Progress tracking and display              │
│    - Input file validation                      │
│                                                 │
│ 2. Processing Engine                            │
│    - Parallel processing coordination           │
│    - Memory-efficient buffer management         │
│    - Task scheduling and distribution           │
│                                                 │
│ 3. Output Generator                             │
│    - Statistics collection and aggregation      │
│    - Report formatting and generation           │
│    - Output file management                     │
└─────────────────────────────────────────────────┘

## Level 2: Implementation Details
┌─────────────────────────────────────────────────┐
│ Input Handler:                                  │
│ ├─ CLI (clap-based argument parsing)           │
│ ├─ Progress Bar (indicatif integration)        │
│ └─ Input Validation (file checks)              │
│                                                │
│ Processing Engine:                             │
│ ├─ Thread Pool (rayon-based)                   │
│ ├─ Buffer Management (64KB chunks)             │
│ └─ Task Scheduler (tokio async runtime)        │
│                                                │
│ Output Generator:                              │
│ ├─ Stats Collector (atomic counters)           │
│ ├─ Report Builder (multiple formats)           │
│ └─ File Writer (buffered async I/O)           │
└─────────────────────────────────────────────────┘

## Level 3: Technical Specifications
┌─────────────────────────────────────────────────┐
│ Safety Features:                                │
│ ├─ Memory Safety                               │
│ │  └─ RAII-based resource management           │
│ ├─ Thread Safety                               │
│ │  └─ Lock-free algorithms where possible      │
│ └─ Error Handling                              │
│    └─ Comprehensive error recovery             │
│                                                │
│ Performance Optimizations:                      │
│ ├─ Buffer Pool                                 │
│ │  └─ Efficient memory reuse                   │
│ ├─ Parallel Processing                         │
│ │  └─ Work stealing thread pool                │
│ └─ Async I/O                                   │
│    └─ Non-blocking operations                  │
│                                                │
│ Resource Management:                           │
│ ├─ Memory Limits                               │
│ │  └─ Configurable thresholds                  │
│ ├─ Thread Pool                                 │
│ │  └─ CPU-aware scaling                        │
│ └─ I/O Buffers                                 │
│    └─ Size-optimized chunks                    │
└─────────────────────────────────────────────────┘
