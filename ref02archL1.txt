# ZIP Analyzer Architecture 🏗️

"ZIP files are read from the end - this is fundamental to the format. The Central Directory at the end contains the true file list and locations."

## 1. Core Architecture 🎯
```
Input ZIP    →    Find CD     →    Process CD    →    Report
   📦        →    [End Scan]  →    [Entries]     →    📊
   │              ┌─────────┐      ┌─────────┐        │
   └─────────────►│ EOCD    ├─────►│ CD      ├───────►│
                  └─────────┘      └─────────┘        ▼
                  Last 64KB     Central Directory  Results
```

## 2. Module Structure 📁
```rust
src/
├── main.rs       # CLI and orchestration
├── reader.rs     # ZIP end scanning & CD reading
├── processor.rs  # Central Directory processing
└── types.rs      # ZIP format constants & types
```

## 3. Data Flow 🔄
```
1. Read Last 64KB → Find EOCD → Get CD Location
   │                    │            │
   ▼                    ▼            ▼
[Fast Scan]      [0x06054b50]   [CD Offset]

2. Read CD → Process Entries → Update Results
   │             │               │
   ▼             ▼               ▼
[CD Data]    [File Info]    [Statistics]
```

## 4. ZIP Format Constants 📋
```rust
// Record Signatures
EOCD_SIG: u32 = 0x06054b50  // End of Central Directory
CDFH_SIG: u32 = 0x02014b50  // Central Directory File Header
LFH_SIG: u32 = 0x04034b50   // Local File Header

// Format Constraints
MAX_COMMENT_SIZE: u16 = 0xFFFF  // 64KB max comment
MIN_EOCD_SIZE: u32 = 22       // Minimum EOCD record size
```

## 5. Processing Strategy 🎯
```
1. End Scanning:
   - Start at EOF-22 (minimum EOCD size)
   - Scan backwards up to 64KB
   - Look for EOCD signature
   - Handle ZIP file comments

2. Central Directory:
   - Get CD offset from EOCD
   - Read CD in one operation
   - Process all file entries
   - Skip directory entries
```

## 6. Memory Model 🧠
```
End Scan Buffer   CD Buffer        Results
     64KB           Variable        Thread-Safe
      │               │               │
[Last Block]    [File Records]    [Arc<RwLock>]
```

## 7. Error Handling 🚨
```
End Scan Errors:
- No EOCD found
- Invalid CD offset
- Comment contains signature

CD Processing:
- Invalid signatures
- Corrupt entries
- Size mismatches
```

## 8. Implementation Notes 📝

### ZIP Format Rules
```
1. EOCD must be last (before comment)
2. CD contains true file list
3. CD entries point to local headers
4. Directory entries end with '/'
```

### Performance Optimizations
```
1. Fast end scan (64KB max)
2. Single CD read operation
3. Parallel entry processing
4. Memory-mapped CD for large files
```

### Safety Checks
```
1. Validate all signatures
2. Check CD offset bounds
3. Verify entry sizes
4. Handle ZIP64 extensions
```